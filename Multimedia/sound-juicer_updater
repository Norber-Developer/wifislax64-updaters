#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20161031
CATEGORIA="Editores de audio"

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	PRGNAM=sound-juicer
	echo -ne "\033]2;${PRGNAM}_updater\007"
	WEB=http://ftp.gnome.org/pub/gnome/sources/$PRGNAM/
	#RAMA=`curl -s $WEB|grep [0-9]/|tail -1|rev|cut -d '=' -f-1|rev|cut -d / -f-1|rev|sed 's/.$//g'|rev`
	#VERSION=`curl -s ${WEB}$RAMA/|grep tar.xz|tail -1|cut -d- -f3|cut -d t -f-1|sed 's/.$//g'`
	RAMA=3.18
	VERSION=3.18.1
	EXTENSION=tar.xz
	SOURCES=$PRGNAM-$VERSION.$EXTENSION
	DOWNLOAD=${WEB}$RAMA/$SOURCES
}

# Comprobar dependencias
F_dependencias(){
DEPENDENCIAS="libdiscid brasero hicolor-icon-theme iso-codes libmusicbrainz"
f_dependencias
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){
echo 
echo "$VERDE"Configurando ..."$CIERRE"
sleep 1
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var

echo 
echo "$VERDE"Compilando ..."$CIERRE"
sleep 1
make || exit 1
make install DESTDIR=$PKG
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del paquete
f_versionInstalada
#Compronar dependencias
F_dependencias
#Si no existe el fichero se descargara
f_download
#Preparamos entorno
f_preparar
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales